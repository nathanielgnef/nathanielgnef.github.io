<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title/><link>https://nathanielgnef.github.io/</link><description>Welcome to NathanielGnef's blog.</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>aquilah@aliyun.com (NathanielGnef)</managingEditor><webMaster>aquilah@aliyun.com (NathanielGnef)</webMaster><lastBuildDate>Thu, 28 Apr 2022 11:25:40 +0800</lastBuildDate><atom:link href="https://nathanielgnef.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>计算机随机数</title><link>https://nathanielgnef.github.io/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%9A%8F%E6%9C%BA%E6%95%B0/</link><pubDate>Thu, 28 Apr 2022 11:25:40 +0800</pubDate><author>aquilah@aliyun.com (NathanielGnef)</author><guid>https://nathanielgnef.github.io/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%9A%8F%E6%9C%BA%E6%95%B0/</guid><description><![CDATA[<p>计算机中，随机数都是由<strong>随机数生成器(Random Number Generator)</strong> 生成的</p>
<h2 id="伪随机数pseudo-random-number">伪随机数(Pseudo-Random Number)</h2>
<h3 id="弱伪随机数">弱伪随机数</h3>
<p>特点是通过纯软件算法，按照一定的规律生成一个随机值。常用的方法是使用<strong>伪随机数生成器(PRNG)</strong></p>
<p><strong>伪随机数生成器(PRNG)</strong><br>
最基础的思想是<strong>均匀分布</strong>，最常用的算法就是<strong>线性同余法</strong><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<p>我们可以把这个伪随机数生成器看做是一个转换函数 <strong>f(x)</strong>，在生成的起始，我需要输入 <strong>x1</strong> ，当输入这个 <strong>x1</strong> 后，我们就可以通过转换函数得到第一个随机数<strong>f(x1)</strong>。 接下来，我们再把<strong>f(x1)</strong> 输入<strong>f(x)</strong> 到中，那么我们就可以得到第二个随机数<strong>f(x2)</strong>.一直下去，我们就可以得到一个<strong>伪随机序列</strong>。当然，上面的算法只是一个简单示例参考，实际的随机数生成程序还要复杂得多。有一点我们需要注意的是，对于这个伪随机数生成程序，我们发现主要我们初始<strong>x1</strong>输入的是一样的话，那么我们得到的随机序列就是相同的，而这个初始的<strong>x1</strong>其实就是我们的<strong>随机数种子(seed)</strong></p>
<p><strong>随机数种子(seed)</strong> 常用<strong>时间</strong>来生成，时间的变化终究有规律可循，所以弱伪随机数是有<strong>周期</strong>的</p>
<p>好的伪随机数生成器应具备以下特征：</p>
<ol>
<li>相同序列的概率非常低</li>
<li>符合统计学的平均性，比如所有数字出现概率应该相同，卡方检验应该能通过，超长游程长度概略应该非常小，自相关应该只有一个尖峰，任何长度的同一数字之后别的数字出现概率应该仍然是相等的等等</li>
<li>不应该能够从一段序列猜测出随机数发生器的工作状态或者下一个随机数</li>
<li>不应该从随机数发生器的状态能猜测出随机数发生器以前的工作状态</li>
</ol>
<p><strong>线性同余法</strong>：</p>
<ol>
<li>
<p>什么是线性同余法？<br>
线性同余法基于如下线性同余方程组：<br>
$ax+by=m$</p>
</li>
<li>
<p>用于产生均匀型伪随机数的线性同余生成器(与上面的方程符号没有对应关系)<br>
$x_n=(ax_{n-1}+b)mod(m)$</p>
</li>
<li>
<p>其中，a为&quot;乘数&quot;，b为&quot;增量&quot;，m为&quot;模数&quot;,x0为&quot;种子数&quot;
如果产生的是区间实在(0,1)之间的，则只需要每个数都除以m即可，即取<br>
$\xi_n=x_n/m$</p>
</li>
<li>
<p>线性同余法产生均匀型伪随机数需要注意什么？</p>
<ol>
<li>种子数是在计算时随机给出的</li>
<li>决定伪随机数质量的是其余的三个参数，即a,b,m决定生成伪随机数的质量(质量指的是伪随机数序列的周期性)</li>
<li>一般b不为0。如果b为零，线性同余法变成了<strong>乘同余法</strong><sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></li>
</ol>
</li>
<li>
<p>高性能线性同余法参数取值要求？</p>
<ol>
<li>一般选取方法：乘数a满足$a=4p+1$；增量b满足$b=2q+1$。其中p，q为正整数</li>
<li>m值得话最好是选择大的，因为m值直接影响伪随机数序列的周期长短</li>
<li>a和b的值越大，产生的伪随机数越均匀</li>
<li>a和m如果互质，产生随机数效果比不互质好</li>
</ol>
</li>
</ol>
<h3 id="强伪随机数">强伪随机数</h3>
<p>顾名思义，该类随机数具有更强的随机数特性，能够满足<strong>随机性</strong>和<strong>不可推测特性</strong>。例如通过获取敲击键盘的数据作为随机数种子进而生成一组强伪随机数，因为击打键盘存在不确定性，所以生成的随机数也更接近与真正的随机数</p>
<h2 id="真随机数true-random-number">真随机数(TRUE Random Number)</h2>
<p>同时具备<strong>随机性</strong>、<strong>不可推测</strong>和<strong>不可重复</strong>这 3 个基本特点。真随机数的生成是基于<strong>物理现象</strong>完成的，例如掷骰子、抛硬币等等。</p>
<p><strong>硬件随机数生成器(HRNG)/真随机数生成器(TRNG)</strong><br>
通常是通过放大电路的热噪声来产生随机数</p>
<h2 id="准随机数quasi-random-number">准随机数(Quasi-Random Number)</h2>
<p><strong>准随机数发生器(QRNG)</strong> 产生高度均匀的单位超立方体样本</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>产生均匀型伪随机数的算法&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>也是最常用的均匀型伪随机数发生器&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></description></item><item><title>进程和线程</title><link>https://nathanielgnef.github.io/posts/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</link><pubDate>Thu, 28 Apr 2022 11:09:10 +0800</pubDate><author>aquilah@aliyun.com (NathanielGnef)</author><guid>https://nathanielgnef.github.io/posts/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</guid><description><![CDATA[<h2 id="进程">进程</h2>
<ul>
<li>进程就是上下文切换之间的程序执行的部分。是运行中的程序的描述，也是对应于该段CPU执行时间的描述</li>
<li>在软件编码方面，我们说的进程，其实是稍不同的，编程语言中创建的进程是一个无限loop，对应的是tcb块。这个是操作系统进行调度的单位。所以和上面的cpu执行时间段还是不同的</li>
<li>进程，与之相关的东东有寻址空间，寄存器组，堆栈空间等。即不同的进程，这些东东都不同，从而能相互区别</li>
</ul>
<h2 id="线程">线程</h2>
<p>线程是共享了进程的上下文环境，的更为细小的CPU时间段。线程主要共享的是进程的地址空间</p>
]]></description></item><item><title>计算机编码</title><link>https://nathanielgnef.github.io/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A0%81/</link><pubDate>Thu, 28 Apr 2022 10:59:29 +0800</pubDate><author>aquilah@aliyun.com (NathanielGnef)</author><guid>https://nathanielgnef.github.io/posts/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A0%81/</guid><description><![CDATA[<p>对编码规则的需求：<br>
在计算机中，所有的数据在存储和运算时都要使用二进制数表示，需要制定一套<strong>编码规则</strong>约定具体的二进制数代表具体的字符</p>
<h2 id="标准asciiamerican-standard-code-for-information-interchange0127-7bit">标准ASCII(American Standard Code for Information Interchange)(0~127 7bit)</h2>
<p>被 ISO (International Organization for Standardization)定为国际标准<br>
早期ASCII只能使用128个字符，表示所有的大写和小写字母，数字 0 到 9、标点符号，以及在美式英语中使用的特殊控制字符</p>
<p>规则：</p>
<ul>
<li>0~9&lt;A~Z&lt;a~z</li>
<li>同个字母的大写字母比小写字母要小32</li>
</ul>
<h2 id="扩展ascii码extended-ascii0255-8bit">扩展ASCII码(Extended ASCII)(0~255 8bit)</h2>
<p>欧洲人128个字符的字符集不够用，拓展到256个字符的字符集</p>
<h2 id="unicodeuniversal-multiple-octet-coded-character-setucs">Unicode(Universal Multiple-Octet Coded Character Set,UCS)</h2>
<p>它为每种语言中的每个字符设定了统一并且唯一的二进制编码，以满足跨语言、跨平台进行文本转换、处理的需求</p>
<ul>
<li>UTF-8(8位元，UCS Transfer Format)
是针对Unicode的一种可变长度字符编码,可以用来表示Unicode标准中的任何字符，而且其编码中的第一个字节仍与ASCII相容</li>
<li>UTF-16(16位元)
UTF-16比起UTF-8，好处在于大部分字符都以固定长度的字节（2字节）储存，但UTF-16却无法兼容于ASCII编码。</li>
</ul>
<h2 id="gb2312信息交换用汉字编码字符集基本集">GB2312(信息交换用汉字编码字符集·基本集)</h2>
<p>共收录 6763 个汉字，其中一级汉字 3755 个，二级汉字 3008 个；同时收录了包括拉丁字母、希腊字母、日文平假名及片假名字母、俄语西里尔字母在内的 682 个字符</p>
<ul>
<li>对于人名、繁体字等方面出现的生僻字，GB 2312 不能处理，这导致了后来 GBK 及 GB 18030 汉字字符集的出现</li>
<li>对任意一个图形字符都采用两个字节表示</li>
</ul>
<h2 id="gbkchinese-internal-code-specification">GBK(Chinese Internal Code Specification)</h2>
<p>汉字内码扩展规范，K 为汉语拼音 Kuo Zhan（扩展）中“扩”字的声母<br>
GBK 共收入 21886 个汉字和图形符号，包括：</p>
<ul>
<li>GB 2312 中的全部汉字、非汉字符号</li>
<li>BIG5 中的全部汉字</li>
<li>与 ISO 10646 相应的国家标准 GB 13000 中的其它 CJK 汉字，以上合计 20902 个汉字</li>
<li>其它汉字、部首、符号，共计 984 个</li>
</ul>
<p>GBK 向下与 GB 2312 完全兼容，向上支持 ISO 10646 国际标准<br>
GBK 采用双字节表示</p>
<h2 id="gb18030国家标准-gb-18030-2005信息技术中文编码字符集">GB18030(国家标准 GB 18030-2005《信息技术中文编码字符集》)</h2>
<p>GB 18030 与 GB 2312-1980 和 GBK 兼容，共收录汉字70244个</p>
<ul>
<li>与 UTF-8 相同，采用多字节编码，每个字可以由 1 个、2 个或 4 个字节组成</li>
<li>编码空间庞大，最多可定义 161 万个字符</li>
<li>支持中国国内少数民族的文字，不需要动用造字区</li>
<li>汉字收录范围包含繁体汉字以及日韩汉字</li>
</ul>
<p>GB 18030 编码是一二四字节变长编码</p>
]]></description></item><item><title>9.集合Set</title><link>https://nathanielgnef.github.io/posts/9.%E9%9B%86%E5%90%88set/</link><pubDate>Thu, 28 Apr 2022 10:43:40 +0800</pubDate><author>aquilah@aliyun.com (NathanielGnef)</author><guid>https://nathanielgnef.github.io/posts/9.%E9%9B%86%E5%90%88set/</guid><description><![CDATA[<p>Python 3 中有两种内置集合类型，set 和 frozenset</p>
<h2 id="集合set">集合Set</h2>
<p>格式：</p>
<ul>
<li>使用花括号：<code>{value01,value02,...}</code></li>
<li>使用集合推导式：<code>{c for c in 'abracadabra' if c not in 'abc'}</code></li>
<li>使用类型构造器：<code>set()</code>，<code>set(iterable)</code></li>
</ul>
<p>补充说明：</p>
<ul>
<li>
<p>集合中的重复元素会被删除</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">set1</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">set1</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>集合中的元素数据类型可以不相同，但必须是可哈希的(hashable)</p>
<ul>
<li>可哈希的(hashable)：不可变，如字符串、元组等，不能对元素修改</li>
<li>不可哈希的(unhashable)：可变，如列表、字典等，能对元素修改</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">set1</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="s1">&#39;Hello World&#39;</span><span class="p">,(</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">)}</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">set1</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">),</span> <span class="s1">&#39;Hello World&#39;</span><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>集合是无序的，不支持索引、切片</p>
</li>
<li>
<p>集合是不可哈希的(unhashable)，无法成为其他集合的元素，能对元素进行修改</p>
</li>
</ul>
<h3 id="迭代">迭代</h3>
<p>格式：<code>for x in {1,2,3}:print(x,end=&quot; &quot;)</code></p>
<h3 id="运算符">运算符</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="nb">set</span> <span class="o">-</span> <span class="n">other</span> <span class="o">-</span> <span class="o">...</span>           <span class="c1">#返回一个新集合，其中包含原集合中在 others 指定的其他集合中不存在的元素</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span> <span class="o">|</span> <span class="n">other</span> <span class="o">|</span> <span class="o">...</span>           <span class="c1">#返回一个新集合，其中包含来自原集合以及 others 指定的所有集合中的元素</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span> <span class="o">&amp;</span> <span class="n">other</span> <span class="o">&amp;</span> <span class="o">...</span>           <span class="c1">#返回一个新集合，其中包含原集合以及 others 指定的所有集合中共有的元素</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span> <span class="o">^</span> <span class="n">other</span>                 <span class="c1">#返回一个新集合，其中的元素或属于原集合或属于 other 指定的其他集合，但不能同时属于两者</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span> <span class="o">&lt;=</span> <span class="n">other</span>                <span class="c1">#检测是否集合中的每个元素都在 other 之中</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span> <span class="o">&lt;</span> <span class="n">other</span>                 <span class="c1">#检测集合是否为 other 的真子集，即 set &lt;= other and set != other</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span> <span class="o">&gt;=</span> <span class="n">other</span>                <span class="c1">#检测是否 other 中的每个元素都在集合之中</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span> <span class="o">&gt;</span> <span class="n">other</span>                 <span class="c1">#检测集合是否为 other 的真超集，即 set &gt;= other and set != other</span>
</span></span><span class="line"><span class="cl">    <span class="ow">in</span>                          <span class="c1">#成员运算符，如果集合中包含给定的值返回 True</span>
</span></span><span class="line"><span class="cl">    <span class="ow">not</span> <span class="ow">in</span>                      <span class="c1">#成员运算符，如果集合中不包含给定的值返回 True</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="s1">&#39;abracadabra&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="s1">&#39;alacazam&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">a</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span><span class="s1">&#39;d&#39;</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">b</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">,</span> <span class="s1">&#39;l&#39;</span><span class="p">,</span> <span class="s1">&#39;m&#39;</span><span class="p">,</span> <span class="s1">&#39;z&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">-</span> <span class="n">b</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span><span class="s1">&#39;d&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">|</span> <span class="n">b</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span><span class="s1">&#39;d&#39;</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="s1">&#39;l&#39;</span><span class="p">,</span> <span class="s1">&#39;m&#39;</span><span class="p">,</span> <span class="s1">&#39;z&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">&amp;</span> <span class="n">b</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span><span class="s1">&#39;c&#39;</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">^</span> <span class="n">b</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span><span class="s1">&#39;d&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="s1">&#39;m&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="s1">&#39;z&#39;</span><span class="p">,</span> <span class="s1">&#39;l&#39;</span><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="支持set的函数">支持Set的函数</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="nb">len</span><span class="p">(</span><span class="n">set1</span><span class="p">)</span>                   <span class="c1">#返回Set1的元素个数</span>
</span></span><span class="line"><span class="cl">    <span class="nb">max</span><span class="p">(</span><span class="n">set1</span><span class="p">)</span>                   <span class="c1">#返回Set1的元素最大值</span>
</span></span><span class="line"><span class="cl">    <span class="nb">min</span><span class="p">(</span><span class="n">set1</span><span class="p">)</span>                   <span class="c1">#返回Set1的元素最小值</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="p">(</span><span class="n">iterable</span><span class="p">)</span>               <span class="c1">#将可迭代对象iterable转换为Set，并返回该Set</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="set的方法">Set的方法</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="nb">object</span><span class="p">)</span>                                     <span class="c1">#添加一个元素到集合中，如果该元素已经存在，则不进行操作</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>                                         <span class="c1">#清空集合</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>                                          <span class="c1">#返回集合的复制</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">difference</span><span class="p">(</span><span class="n">iterable</span><span class="p">[,</span><span class="n">iterable</span><span class="p">,</span><span class="o">...</span><span class="p">])</span>             <span class="c1">#返回该集合中不存在于其他可迭代对象iterable中的元素的集合</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">difference_update</span><span class="p">(</span><span class="n">iterable</span><span class="p">[,</span><span class="n">iterable</span><span class="p">,</span><span class="o">...</span><span class="p">])</span>      <span class="c1">#移除该集合中存在于其他可迭代对象iterable中的元素</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">discard</span><span class="p">(</span><span class="nb">object</span><span class="p">)</span>                                 <span class="c1">#删除该集合中的对象object，如果该集合中不存在对象object，则不进行操作</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">intersection</span><span class="p">(</span><span class="n">iterable</span><span class="p">[,</span><span class="n">iterable</span><span class="p">,</span><span class="o">...</span><span class="p">])</span>           <span class="c1">#返回该集合与其他可迭代对象iterable的交集，如果参数有Str，则交集为空集</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">intersection_update</span><span class="p">(</span><span class="n">iterable</span><span class="p">[,</span><span class="n">iterable</span><span class="p">,</span><span class="o">...</span><span class="p">])</span>    <span class="c1">#使用该集合与其他可迭代对象iterable的交集更新该集合</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">isdisjoint</span><span class="p">(</span><span class="n">iterable</span><span class="p">)</span>                            <span class="c1">#如果该集合与可迭代对象iterable的交集为空返回True，否则返回False</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">issubset</span><span class="p">(</span><span class="n">iterable</span><span class="p">)</span>                              <span class="c1">#如果该集合是可迭代对象iterable的子集，返回True，否则返回False</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">issuperset</span><span class="p">(</span><span class="n">iterable</span><span class="p">)</span>                            <span class="c1">#如果该集合是可迭代对象iterable的超集，返回True，否则返回False</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>                                           <span class="c1">#删除一个元素</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="nb">object</span><span class="p">)</span>                                  <span class="c1">#删除该集合中的一个对象object，如果不存在该对象，则报错KeyError</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">symmetric_difference</span><span class="p">(</span><span class="n">iterable</span><span class="p">)</span>                  <span class="c1">#返回该集合与可迭代对象iterable不同时存在的元素的集合</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">symmetric_difference_update</span><span class="p">(</span><span class="n">iterable</span><span class="p">)</span>           <span class="c1">#使用该集合与可迭代对象iterable不同时存在的元素的集合更新该集合</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">union</span><span class="p">(</span><span class="n">iterable</span><span class="p">[,</span><span class="n">iterable</span><span class="p">,</span><span class="o">...</span><span class="p">])</span>                  <span class="c1">#返回该集合与其他可迭代对象iterable的并集</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">iterable</span><span class="p">[,</span><span class="n">iterable</span><span class="p">,</span><span class="o">...</span><span class="p">])</span>                 <span class="c1">#使用该集合与其他可迭代对象iterable的并集更新该集合</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"></code></pre></td></tr></table>
</div>
</div><h2 id="冻结集合frozenset">冻结集合Frozenset</h2>
<p>格式：</p>
<ul>
<li>使用类型构造器：<code>frozenset()</code>，<code>forzenset(iterable)</code></li>
</ul>
<p>补充说明：</p>
<ul>
<li>冻结集合是可哈希的(hashable)，可以成为其他集合的元素，不能对元素进行修改</li>
</ul>
]]></description></item><item><title>8.元组Tuple</title><link>https://nathanielgnef.github.io/posts/8.%E5%85%83%E7%BB%84tuple/</link><pubDate>Thu, 28 Apr 2022 10:36:39 +0800</pubDate><author>aquilah@aliyun.com (NathanielGnef)</author><guid>https://nathanielgnef.github.io/posts/8.%E5%85%83%E7%BB%84tuple/</guid><description><![CDATA[<p>格式：</p>
<ul>
<li>空元组<code>()</code></li>
<li>含有元素的元组：
<ul>
<li>带括号：<code>(a,)</code>，<code>(a,b,c,d,...)</code></li>
<li>不带括号：<code>a,</code>，<code>a,b,c,d,...</code></li>
</ul>
</li>
</ul>
<p>补充说明：</p>
<ul>
<li>
<p>定义含有一个元素的带括号的元组，应当在元素后面加<code>,</code>,以区分<code>变量 = (值或表达式)</code>把<code>()</code>作为运算符的定义方式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tuple1</span> <span class="o">=</span> <span class="p">(</span><span class="mi">20</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tuple1</span>
</span></span><span class="line"><span class="cl">    <span class="mi">20</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">type</span><span class="p">(</span><span class="n">tuple1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="k">class</span> <span class="err">&#39;</span><span class="nc">int</span><span class="s1">&#39;&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tuple2</span> <span class="o">=</span> <span class="p">(</span><span class="mi">20</span><span class="p">,)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tuple2</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="mi">20</span><span class="p">,)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">type</span><span class="p">(</span><span class="n">tuple2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="k">class</span> <span class="err">&#39;</span><span class="nc">tuple</span><span class="s1">&#39;&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>元组中的元素不能被修改，但是可以修改其中的可变序列对象中的元素</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tuple1</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tuple1</span><span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">9</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tuple1</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="p">[</span><span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">])</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>元组中的元素数据类型可以不相同</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tuple1</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="s1">&#39;1&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span> <span class="o">=</span> <span class="s1">&#39;World&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tuple2</span> <span class="o">=</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="n">tuple1</span><span class="p">,</span><span class="n">str1</span><span class="p">,</span><span class="n">list1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tuple2</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;1&#39;</span><span class="p">),</span> <span class="s1">&#39;World&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">])</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h2 id="索引">索引</h2>
<p>格式：<code>变量[下标]</code><br>
索引方式：</p>
<ul>
<li>从左往右以0开始</li>
<li>从右往左以-1开始</li>
</ul>
<p>取值：不能越界</p>
<h2 id="截取切片">截取(切片)</h2>
<p>格式：<code>变量[start:stop[:step]]</code><br>
取值：</p>
<ul>
<li>取值区间左闭右开，会自动处理越界索引</li>
<li>step默认值为1，为正顺序，为负逆序</li>
</ul>
<h2 id="迭代">迭代</h2>
<p>格式：<code>for x in (1,2,3):print(x,end=&quot; &quot;)</code></p>
<h2 id="运算符">运算符</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">+</span>                           <span class="c1">#元组连接</span>
</span></span><span class="line"><span class="cl">    <span class="o">*</span>                           <span class="c1">#重复元组为一个元组</span>
</span></span><span class="line"><span class="cl">    <span class="p">[]</span>                          <span class="c1">#通过索引获取值</span>
</span></span><span class="line"><span class="cl">    <span class="p">[:]</span>                         <span class="c1">#截取元组，左闭右开</span>
</span></span><span class="line"><span class="cl">    <span class="ow">in</span>                          <span class="c1">#成员运算符，如果元组中包含给定的值返回 True</span>
</span></span><span class="line"><span class="cl">    <span class="ow">not</span> <span class="ow">in</span>                      <span class="c1">#成员运算符，如果元组中不包含给定的值返回 True</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="支持tuple的函数">支持Tuple的函数</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="nb">len</span><span class="p">(</span><span class="n">tuple1</span><span class="p">)</span>                 <span class="c1">#返回Tuple1的元素个数</span>
</span></span><span class="line"><span class="cl">    <span class="nb">max</span><span class="p">(</span><span class="n">tuple1</span><span class="p">)</span>                 <span class="c1">#返回Tuple1的元素最大值</span>
</span></span><span class="line"><span class="cl">    <span class="nb">min</span><span class="p">(</span><span class="n">tuple1</span><span class="p">)</span>                 <span class="c1">#返回Tuple1的元素最小值</span>
</span></span><span class="line"><span class="cl">    <span class="nb">tuple</span><span class="p">(</span><span class="n">iterable</span><span class="p">)</span>             <span class="c1">#将可迭代对象iterable转换为Tuple，并返回该Tuple</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="tuple的方法">Tuple的方法</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="nb">tuple</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>                    <span class="c1">#返回对象obj在元组中的个数</span>
</span></span><span class="line"><span class="cl">    <span class="nb">tuple</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">obj</span><span class="p">[,</span><span class="n">start</span><span class="p">[,</span><span class="n">stop</span><span class="p">]])</span>     <span class="c1">#返回对象obj在元组中的第一个索引，可指定位置</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>7.列表List</title><link>https://nathanielgnef.github.io/posts/7.%E5%88%97%E8%A1%A8list/</link><pubDate>Thu, 28 Apr 2022 10:33:54 +0800</pubDate><author>aquilah@aliyun.com (NathanielGnef)</author><guid>https://nathanielgnef.github.io/posts/7.%E5%88%97%E8%A1%A8list/</guid><description><![CDATA[<p>格式：</p>
<ul>
<li>空列表：<code>[]</code></li>
<li>含有元素的列表：<code>[a]</code>，<code>[a,b,c,d,...]</code></li>
</ul>
<p>补充说明：</p>
<ul>
<li>
<p>列表中元素的数据类型可以不相同</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="s1">&#39;Runoob&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span><span class="s1">&#39;World&#39;</span><span class="p">,</span><span class="mf">12.0</span><span class="p">,</span><span class="mi">3</span><span class="o">+</span><span class="mi">4</span><span class="n">j</span><span class="p">,</span><span class="nb">list</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;World&#39;</span><span class="p">,</span> <span class="mf">12.0</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="o">+</span><span class="mi">4</span><span class="n">j</span><span class="p">),</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="s1">&#39;Runoob&#39;</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span><span class="p">[</span><span class="mi">7</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;Runoob&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>List中的元素是可以改变的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">9</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">9</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="k">del</span> <span class="n">list1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h2 id="索引">索引</h2>
<p>格式：<code>变量[下标]</code><br>
索引方式：</p>
<ul>
<li>从左往右以0开始</li>
<li>从右往左以-1开始</li>
</ul>
<p>取值：不能越界</p>
<h2 id="截取切片">截取(切片)</h2>
<p>格式：<code>变量[start:stop[:step]]</code><br>
取值：</p>
<ul>
<li>取值区间左闭右开，会自动处理越界索引</li>
<li>step默认值为1，为正顺序，为负逆序</li>
</ul>
<h2 id="迭代">迭代</h2>
<p>格式：<code>for x in [1,2,3]:print(x,end=&quot; &quot;)</code></p>
<h2 id="运算符">运算符</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">+</span>                           <span class="c1">#列表连接</span>
</span></span><span class="line"><span class="cl">    <span class="o">*</span>                           <span class="c1">#重复列表为一个列表</span>
</span></span><span class="line"><span class="cl">    <span class="p">[]</span>                          <span class="c1">#通过索引获取值</span>
</span></span><span class="line"><span class="cl">    <span class="p">[:]</span>                         <span class="c1">#截取列表，左闭右开</span>
</span></span><span class="line"><span class="cl">    <span class="ow">in</span>                          <span class="c1">#成员运算符，如果列表中包含给定的值返回 True</span>
</span></span><span class="line"><span class="cl">    <span class="ow">not</span> <span class="ow">in</span>                      <span class="c1">#成员运算符，如果列表中不包含给定的值返回 True</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span><span class="o">+</span><span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span><span class="o">+</span><span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span> <span class="o">=</span> <span class="n">list2</span><span class="o">*</span><span class="mi">2</span>             <span class="c1">#元素中包含可变序列时，重复是对可变序列的引用</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span><span class="p">[</span><span class="mi">6</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">4</span>             <span class="c1">#当元素中的可变序列中的元素被修改时，引用会一起被修改</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">]]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="支持list的函数">支持List的函数</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="nb">len</span><span class="p">(</span><span class="n">list1</span><span class="p">)</span>                  <span class="c1">#返回list1的元素个数</span>
</span></span><span class="line"><span class="cl">    <span class="nb">max</span><span class="p">(</span><span class="n">list1</span><span class="p">)</span>                  <span class="c1">#返回list1的元素最大值</span>
</span></span><span class="line"><span class="cl">    <span class="nb">min</span><span class="p">(</span><span class="n">list1</span><span class="p">)</span>                  <span class="c1">#返回list1的元素最小值</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="p">(</span><span class="n">iterable</span><span class="p">)</span>              <span class="c1">#将可迭代对象iterable转换为List，并返回该List</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="list的方法">List的方法</h2>
<p><code>list.sort([key=None],[reverse=False])</code>解析：</p>
<ul>
<li>key：指定带有一个参数的函数，用于从每个列表元素中提取比较键(例如<code>key=str.lower</code>)。默认值为<code>None</code>(直接比较元素)</li>
<li>reverse：排序规则，<code>reverse = True</code>降序，<code>reverse = False</code>升序(默认)</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>                <span class="c1">#在列表末尾添加一个新的对象</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>                 <span class="c1">#返回对象在列表中出现的次数</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">seq</span><span class="p">)</span>                <span class="c1">#在列表末尾追加一个序列中的元素</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">x</span><span class="p">[,</span><span class="n">start</span><span class="p">[,</span><span class="n">end</span><span class="p">]])</span>     <span class="c1">#返回从列表中找出x第一个匹配项的索引位置</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">index</span><span class="p">,</span><span class="n">obj</span><span class="p">)</span>          <span class="c1">#将指定对象插入列表的指定位置</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">pop</span><span class="p">([</span><span class="n">index</span><span class="p">])</span>               <span class="c1">#删除列表中指定位置的元素(默认index=-1)，并返回被删除的元素</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>                <span class="c1">#移除列表中某个值的第一个匹配项</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">reverse</span><span class="p">()</span>                  <span class="c1">#反向列表中元素</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">sort</span><span class="p">([</span><span class="n">key</span><span class="o">=</span><span class="kc">None</span><span class="p">],[</span><span class="n">reverse</span><span class="o">=</span><span class="kc">False</span><span class="p">])</span>   <span class="c1">#对原列表进行排序</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>                    <span class="c1">#清空列表</span>
</span></span><span class="line"><span class="cl">    <span class="nb">list</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>                     <span class="c1">#复制列表</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span><span class="s1">&#39;World&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">list2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;World&#39;</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">list2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;World&#39;</span><span class="p">],</span> <span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;World&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span> 
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;World&#39;</span><span class="p">],</span> <span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;World&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;World&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;World&#39;</span><span class="p">],</span> <span class="s1">&#39;Hello&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">5</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;World&#39;</span><span class="p">],</span> <span class="s1">&#39;Hello&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;World&#39;</span><span class="p">],</span> <span class="s1">&#39;Hello&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="o">.</span><span class="n">reverse</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;World&#39;</span><span class="p">],</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list2</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="s1">&#39;World&#39;</span><span class="p">,</span> <span class="s1">&#39;Hello&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[]</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="n">list2</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="s1">&#39;World&#39;</span><span class="p">,</span> <span class="s1">&#39;Hello&#39;</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>6.字符串String</title><link>https://nathanielgnef.github.io/posts/6.%E5%AD%97%E7%AC%A6%E4%B8%B2string/</link><pubDate>Thu, 28 Apr 2022 10:31:05 +0800</pubDate><author>aquilah@aliyun.com (NathanielGnef)</author><guid>https://nathanielgnef.github.io/posts/6.%E5%AD%97%E7%AC%A6%E4%B8%B2string/</guid><description><![CDATA[<p>格式：</p>
<ul>
<li>单引号：<code>'允许包含有 &quot;双&quot; 引号'</code></li>
<li>双引号：<code>&quot;允许包含有 '单' 引号&quot;</code></li>
<li>三重引号：<code>'''三重单引号'''</code>，<code>&quot;&quot;&quot;三重双引号&quot;&quot;&quot;</code></li>
</ul>
<p>补充说明：</p>
<ul>
<li>Python 没有单独的字符类型，一个字符就是长度为 1 的字符串</li>
<li>Python 中单引号 &rsquo; 和双引号 &quot; 使用完全相同</li>
<li>按字面意义级联字符串，如<code>&quot;this &quot;&quot;is &quot;&quot;string&quot;</code>会被自动转换为<code>this is string</code></li>
<li>使用三引号 ( &rsquo;&rsquo;&rsquo; 或 &quot;&quot;&quot; ) 可以指定一个多行字符串
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;这是一个
</span></span></span><span class="line"><span class="cl"><span class="s2">    ... 多行字符串&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">这是一个</span>
</span></span><span class="line"><span class="cl">    <span class="n">多行字符串</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>Python 中的字符串不能被修改，向一个索引位置赋值，比如<code>word[0] = 'm'</code>会导致错误</li>
</ul>
<h2 id="编码">编码</h2>
<p>在 Python 3 中，所有的字符串默认都是 Unicode 字符串</p>
<h2 id="转义字符">转义字符</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    \\                          <span class="c1">#反斜杠</span>
</span></span><span class="line"><span class="cl">    \<span class="s1">&#39;                          #单引号</span>
</span></span><span class="line"><span class="cl">    \<span class="s2">&#34;                          #双引号</span>
</span></span><span class="line"><span class="cl">    \<span class="n">a</span>                          <span class="c1">#响铃</span>
</span></span><span class="line"><span class="cl">    \<span class="n">b</span>                          <span class="c1">#退格</span>
</span></span><span class="line"><span class="cl">    \<span class="mi">000</span>                        <span class="c1">#空</span>
</span></span><span class="line"><span class="cl">    \<span class="n">n</span>                          <span class="c1">#换行</span>
</span></span><span class="line"><span class="cl">    \<span class="n">v</span>                          <span class="c1">#纵向制表符</span>
</span></span><span class="line"><span class="cl">    \<span class="n">t</span>                          <span class="c1">#横向制表符</span>
</span></span><span class="line"><span class="cl">    \<span class="n">r</span>                          <span class="c1">#回车，将 \r 后面的内容移到字符串开头，并逐一替换开头部分的字符，直至将 \r 后面的内容完全替换完成</span>
</span></span><span class="line"><span class="cl">    \<span class="n">f</span>                          <span class="c1">#换页</span>
</span></span><span class="line"><span class="cl">    \<span class="n">ooo</span>                        <span class="c1">#八进制值</span>
</span></span><span class="line"><span class="cl">    \<span class="n">xhh</span>                        <span class="c1">#十六进制值</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="原始字符rr">原始字符r/R</h2>
<p>使用 r/R 可以让反斜杠 \ 不发生转义</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span> <span class="o">=</span> <span class="s1">&#39;Ru</span><span class="se">\n</span><span class="s1">oob&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">Ru</span>
</span></span><span class="line"><span class="cl">    <span class="n">oob</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str2</span> <span class="o">=</span> <span class="sa">r</span><span class="s2">&#34;Ru\noob&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str3</span> <span class="o">=</span> <span class="sa">R</span><span class="s2">&#34;Ru\noob&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">Ru</span>\<span class="n">noob</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">Ru</span>\<span class="n">noob</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="索引">索引</h2>
<p>格式：<code>变量[下标]</code><br>
索引方式：</p>
<ul>
<li>从左往右以0开始</li>
<li>从右往左以-1开始</li>
</ul>
<p>取值：不能越界</p>
<h2 id="截取切片">截取(切片)</h2>
<p>格式：<code>变量[start:stop[:step]]</code><br>
取值：</p>
<ul>
<li>取值区间左闭右开，会自动处理越界索引</li>
<li>step默认值为1，为正顺序，为负逆序</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span> <span class="o">=</span> <span class="s1">&#39;HelloWorld&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="p">)</span>                  <span class="c1">#打印str1</span>
</span></span><span class="line"><span class="cl">    <span class="n">HelloWorld</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>            <span class="c1">#打印从第三个到倒数第三个字符的字符串</span>
</span></span><span class="line"><span class="cl">    <span class="n">lloWor</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span>              <span class="c1">#打印从第三个到结束的字符串</span>
</span></span><span class="line"><span class="cl">    <span class="n">lloWorld</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">5</span><span class="p">])</span>             <span class="c1">#打印从第三个到第五个字符的字符串</span>
</span></span><span class="line"><span class="cl">    <span class="n">llo</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="o">-</span><span class="mi">2</span><span class="p">:</span><span class="mi">2</span><span class="p">])</span>          <span class="c1">#以步长2顺序打印从第三个到倒数第三个的字符串</span>
</span></span><span class="line"><span class="cl">    <span class="n">loo</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span><span class="p">[:</span><span class="mi">12</span><span class="p">]</span>                    <span class="c1">#截取到下标12的字符串</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;HelloWorld&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span><span class="p">[</span><span class="o">-</span><span class="mi">12</span><span class="p">:]</span>                   <span class="c1">#截取下标-12到结束的字符串</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;HelloWorld&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>                   <span class="c1">#以步长-1逆序截取整个字符串</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;dlroWolleH&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">12</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>                <span class="c1">#以步长-1逆序截取下标0到下标12的字符串</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span><span class="p">[</span><span class="mi">0</span><span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>                  <span class="c1">#以步长-1逆序截取下标0到结束的字符串</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;H&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>                 <span class="c1">#以步长-1逆序截取下标-1到结束的字符串</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;dlroWolleH&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">12</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>              <span class="c1">#以步长-1逆序截取下标-1到下标-12的字符串</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;dlroWolleH&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="迭代">迭代</h2>
<p>格式：<code>for x in 'HelloWorld':print(x,end=&quot; &quot;)</code></p>
<h2 id="f-string">f-string</h2>
<p>f-string是 python3.6 之后版本添加的，称之为字面量格式化字符串，是新的格式化字符串的语法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span> <span class="o">=</span> <span class="s2">&#34;World&#34;</span>           <span class="c1">#替换字符串</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="sa">f</span><span class="s1">&#39;Hello </span><span class="si">{</span><span class="n">str1</span><span class="si">}</span><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Hello</span> <span class="n">World</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="mi">1</span><span class="o">+</span><span class="mi">2</span><span class="si">}</span><span class="s1">&#39;</span>                <span class="c1">#使用表达式</span>
</span></span><span class="line"><span class="cl">    <span class="mi">3</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在 Python 3.8 的版本中可以使用 <code>=</code> 符号来拼接运算表达式与结果：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="mi">1</span><span class="o">+</span><span class="mi">2</span><span class="si">=}</span><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="mi">1</span><span class="o">+</span><span class="mi">2</span><span class="o">=</span><span class="mi">3</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="运算符">运算符</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">+</span>                           <span class="c1">#字符串连接</span>
</span></span><span class="line"><span class="cl">    <span class="o">*</span>                           <span class="c1">#重复字符串为一个字符串</span>
</span></span><span class="line"><span class="cl">    <span class="p">[]</span>                          <span class="c1">#通过索引获取字符</span>
</span></span><span class="line"><span class="cl">    <span class="p">[:]</span>                         <span class="c1">#截取字符串，左闭右开</span>
</span></span><span class="line"><span class="cl">    <span class="ow">in</span>                          <span class="c1">#成员运算符，如果字符串中包含给定的字符返回 True</span>
</span></span><span class="line"><span class="cl">    <span class="ow">not</span> <span class="ow">in</span>                      <span class="c1">#成员运算符，如果字符串中不包含给定的字符返回 True</span>
</span></span><span class="line"><span class="cl">    <span class="n">r</span><span class="o">/</span><span class="n">R</span>                         <span class="c1">#原始字符串</span>
</span></span><span class="line"><span class="cl">    <span class="o">%</span>                           <span class="c1">#格式字符串</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span> <span class="o">=</span> <span class="s1">&#39;Hello&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str2</span> <span class="o">=</span> <span class="s1">&#39;World&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">newstr</span> <span class="o">=</span> <span class="n">str1</span><span class="o">+</span><span class="n">str2</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">newstr1</span> <span class="o">=</span> <span class="n">newstr</span><span class="o">*</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">newstr</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">HelloWorld</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">newstr1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">HelloWorldHelloWorld</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;H&#39;</span> <span class="ow">in</span> <span class="n">str1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kc">True</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;a&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">str1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kc">True</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="支持string的函数">支持String的函数</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="nb">len</span><span class="p">(</span><span class="n">str1</span><span class="p">)</span>                  <span class="c1">#返回str1的元素个数</span>
</span></span><span class="line"><span class="cl">    <span class="nb">max</span><span class="p">(</span><span class="n">str1</span><span class="p">)</span>                  <span class="c1">#返回str1的元素最大值</span>
</span></span><span class="line"><span class="cl">    <span class="nb">min</span><span class="p">(</span><span class="n">str1</span><span class="p">)</span>                  <span class="c1">#返回str1的元素最小值</span>
</span></span><span class="line"><span class="cl">    <span class="nb">str</span><span class="p">(</span><span class="nb">object</span><span class="p">)</span>                <span class="c1">#将对象object的打印转换为String，并返回该String</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="string的方法">String的方法</h2>
<p><code>encode()</code>与<code>decode()</code>解析：<br>
在Python中，str 表示字符串，bytes 表示字节串。str 类型和 bytes 类型之间转换需要使用<code>encode()</code>和<code>decode()</code>方法</p>
<p><code>encode()</code>语法：<br>
<code>str.encode([encoding=&quot;utf-8&quot;][,errors=&quot;strict&quot;])</code></p>
<p><code>decode()</code>语法：<br>
<code>bytes.decode([encoding=&quot;utf-8&quot;][,errors=&quot;strict&quot;])</code></p>
<p><code>errors</code>取值：</p>
<ul>
<li>strict：遇到无法编码的字符就抛出异常，默认取值为strict</li>
<li>ignore：忽略无法编码的字符</li>
<li>replace：用“？”替换无法编码的字符</li>
<li>xmlcharrefreplace：用xml字符替换无法编码的字符</li>
<li>backslashreplace：使用反斜杠代替无法编码的字符</li>
<li>namereplace：用说明字符的文本替换无法编码的字符</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span> <span class="o">=</span> <span class="s1">&#39;heLLOWorld&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="o">.</span><span class="n">capitalize</span><span class="p">())</span>             <span class="c1">#将字符串的首字符进行大写，其余小写</span>
</span></span><span class="line"><span class="cl">    <span class="n">Helloworld</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="s1">&#39;*&#39;</span><span class="p">))</span>           <span class="c1">#返回一个指定的宽度 width 居中的字符串，fillchar 为填充的字符，默认为空格</span>
</span></span><span class="line"><span class="cl">    <span class="o">*****</span><span class="n">heLLOWorld</span><span class="o">*****</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="o">.</span><span class="n">center</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>                <span class="c1">#width小于原字符串，将返回原字符串</span>
</span></span><span class="line"><span class="cl">    <span class="n">heLLOWorld</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">substr</span> <span class="o">=</span> <span class="s2">&#34;Wo&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s1">&#39;L&#39;</span><span class="p">))</span>               <span class="c1">#返回字符串在str中出现的次数</span>
</span></span><span class="line"><span class="cl">    <span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">substr</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>             <span class="c1">#返回从第3个字符开始查找字符串在str中出现的次数</span>
</span></span><span class="line"><span class="cl">    <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str1</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">substr</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">str1</span><span class="p">)))</span>    <span class="c1">#返回字符串在设定字符串中出现的次数</span>
</span></span><span class="line"><span class="cl">    <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="n">str2</span> <span class="o">=</span> <span class="s2">&#34;中文字符串&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str2</span><span class="o">.</span><span class="n">encode</span><span class="p">())</span>                 <span class="c1">#对str1进行默认utf-8编码，默认错误处理方式为strict</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str2</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s2">&#34;GB2312&#34;</span><span class="p">))</span>         <span class="c1">#对str1指定GB2312编码，默认错误处理方式为strict</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">str2</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">encoding</span><span class="o">=</span><span class="s2">&#34;GBK&#34;</span><span class="p">,</span><span class="n">errors</span><span class="o">=</span><span class="s2">&#34;backslashreplace&#34;</span><span class="p">))</span>              <span class="c1">#对str1指定GBK编码，错误处理方式为backslashreplace</span>
</span></span><span class="line"><span class="cl">    <span class="nb">bytes</span> <span class="o">=</span> <span class="n">str2</span><span class="o">.</span><span class="n">encode</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="nb">bytes</span><span class="o">.</span><span class="n">decode</span><span class="p">())</span>                <span class="c1">#对bytes进行默认utf-8解码，默认错误处理方式为strict</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="nb">bytes</span><span class="o">.</span><span class="n">decodeO</span><span class="p">(</span><span class="s2">&#34;GB2312&#34;</span><span class="p">))</span>       <span class="c1">#对bytes指定GB2312解码，默认错误处理方式为strict</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="nb">bytes</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">encoding</span><span class="o">=</span><span class="s2">&#34;GBK&#34;</span><span class="p">,</span><span class="n">errors</span><span class="o">=</span><span class="s2">&#34;backslashreplace&#34;</span><span class="p">))</span>              <span class="c1">#对bytes指定GBK解码，错误处理方式为backslashreplace</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>5.数字类型Number</title><link>https://nathanielgnef.github.io/posts/5.%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8Bnumber/</link><pubDate>Thu, 28 Apr 2022 10:28:11 +0800</pubDate><author>aquilah@aliyun.com (NathanielGnef)</author><guid>https://nathanielgnef.github.io/posts/5.%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8Bnumber/</guid><description><![CDATA[<p>Python 3 的数值类型支持 <strong>int(整型)</strong>、<strong>float(浮点型)</strong>、<strong>bool(布尔型)</strong>、<strong>complex（复数）</strong></p>
<h2 id="int整型">Int整型</h2>
<p>在Python 3 里，只有一种整数类型 int ，表示为长整型</p>
<h2 id="bool布尔型">Bool布尔型</h2>
<p>Python 3 中，bool 是 int 的子类，True 和 False 可以和数字相加，<code>True==1、False==0 </code>会返回 True，但可以通过 <code>is</code> 来判断类型</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="kc">True</span><span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="kc">False</span><span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="kc">True</span><span class="o">==</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="kc">True</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="kc">False</span><span class="o">==</span><span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="kc">True</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mi">1</span> <span class="ow">is</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="n">stdin</span><span class="o">&gt;</span><span class="p">:</span><span class="mi">1</span><span class="p">:</span> <span class="ne">SyntaxWarning</span><span class="p">:</span> <span class="s2">&#34;is&#34;</span> <span class="k">with</span> <span class="n">a</span> <span class="n">literal</span><span class="o">.</span> <span class="n">Did</span> <span class="n">you</span> <span class="n">mean</span> <span class="s2">&#34;==&#34;</span><span class="err">?</span>
</span></span><span class="line"><span class="cl">    <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mi">0</span> <span class="ow">is</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="n">stdin</span><span class="o">&gt;</span><span class="p">:</span><span class="mi">1</span><span class="p">:</span> <span class="ne">SyntaxWarning</span><span class="p">:</span> <span class="s2">&#34;is&#34;</span> <span class="k">with</span> <span class="n">a</span> <span class="n">literal</span><span class="o">.</span> <span class="n">Did</span> <span class="n">you</span> <span class="n">mean</span> <span class="s2">&#34;==&#34;</span><span class="err">?</span>
</span></span><span class="line"><span class="cl">    <span class="kc">False</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="数学运算">数学运算</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mi">17</span> <span class="o">%</span> <span class="mi">3</span>                  <span class="c1">#取余</span>
</span></span><span class="line"><span class="cl">    <span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mi">2</span> <span class="o">**</span> <span class="mi">5</span>                  <span class="c1">#幂运算，2的5次方</span>
</span></span><span class="line"><span class="cl">    <span class="mi">32</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>隐式转换：<br>
在混合计算时，Python会把较小的数据类型转换成为较大的数据类型</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mi">17</span> <span class="o">%</span> <span class="mf">3.0</span>
</span></span><span class="line"><span class="cl">    <span class="mf">2.0</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mi">2</span> <span class="o">**</span> <span class="mf">5.0</span>
</span></span><span class="line"><span class="cl">    <span class="mf">32.0</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>在交互模式中，最后被输出的表达式结果被赋值给变量 _ 。此处，_ 变量应被用户视为只读变量</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">tax</span> <span class="o">=</span> <span class="mf">12.5</span> <span class="o">/</span> <span class="mi">100</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">price</span> <span class="o">=</span> <span class="mf">100.50</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">price</span> <span class="o">*</span> <span class="n">tax</span>
</span></span><span class="line"><span class="cl">    <span class="mf">12.5625</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">price</span> <span class="o">+</span> <span class="n">_</span>
</span></span><span class="line"><span class="cl">    <span class="mf">113.0625</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">round</span><span class="p">(</span><span class="n">_</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>             <span class="c1">#四舍五入到第2位小数点</span>
</span></span><span class="line"><span class="cl">    <span class="mf">113.06</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<p>数值的除法包含两个运算符：</p>
<ol>
<li>/ 返回一个浮点数</li>
<li>// 向下取整，返回一个整数。// 得到的并不一定是整数类型的数，它与分母分子的数据类型有关系
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mi">7</span><span class="o">/</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="mf">3.5</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mi">7</span><span class="o">//</span><span class="mi">2</span>        <span class="c1">#向下取整，返回整数部分</span>
</span></span><span class="line"><span class="cl">    <span class="mi">3</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mf">7.0</span><span class="o">//</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="mf">3.0</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mi">7</span><span class="o">//</span><span class="mf">2.0</span>
</span></span><span class="line"><span class="cl">    <span class="mf">3.0</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="mf">7.0</span><span class="o">//</span><span class="mf">2.0</span>
</span></span><span class="line"><span class="cl">    <span class="mf">3.0</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
<h2 id="数学常量">数学常量</h2>
<ol>
<li>
<p>数学常量pi(π)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">math</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">math</span><span class="o">.</span><span class="n">pi</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="mf">3.141592653589793</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>数学常量e(自然常数)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">math</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">math</span><span class="o">.</span><span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="mf">2.718281828459045</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
<h2 id="数字类型转换">数字类型转换</h2>
<ul>
<li><code>int(x)</code>将 x 转换为 int 类型</li>
<li><code>float(x)</code>将 x 转换为 float 类型</li>
<li><code>complex(x)</code>将 x 转换为实数为 x，虚数为 0 的复数</li>
<li><code>complex(x,y)</code>返回实数为 x，虚数为 y 的复数</li>
</ul>
<h2 id="数学函数">数学函数</h2>
<p><code>math.fabs()</code>与<code>abs()</code>的区别：</p>
<ul>
<li><code>abs()</code> 是内置函数，<code>math.fabs()</code>在 math 模块中定义</li>
<li><code>math.fabs()</code> 只对浮点型跟整型数值有效，<code>abs()</code>还可以运用在复数中</li>
</ul>
<p><code>pow()</code>与<code>math.pow()</code>的区别：</p>
<ul>
<li><code>pow(x,y[,z])</code>当z存在时，等效于<code>pow(x,y)%z</code>,对结果进行z取模</li>
<li><code>pow()</code>会把参数作为整型，<code>math.pow()</code>会把参数转换为float</li>
</ul>
<p><code>round(x[,n])</code>解析：</p>
<ul>
<li>n &gt; 0,四舍五入到<strong>第n位小数点</strong></li>
<li>n = 0,四舍五入到<strong>最接近的整数</strong></li>
<li>n &lt; 0,在小数点<strong>左侧</strong>进行四舍五入</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="nb">abs</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>                   <span class="c1">#绝对值</span>
</span></span><span class="line"><span class="cl">    <span class="kn">import</span> <span class="nn">math</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">ceil</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>             <span class="c1">#向上取整</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">exp</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>              <span class="c1">#e的x次幂</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">fabs</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>             <span class="c1">#返回x的绝对值的浮点数类型</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">floor</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>            <span class="c1">#向下取整</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>              <span class="c1">#返回x的自然对数，x&gt;0</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>            <span class="c1">#返回以10为基底的x的对数，x&gt;0</span>
</span></span><span class="line"><span class="cl">    <span class="nb">max</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span><span class="n">x2</span><span class="p">,</span><span class="o">...</span><span class="p">)</span>           <span class="c1">#最大值，参数可以为序列</span>
</span></span><span class="line"><span class="cl">    <span class="nb">min</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span><span class="n">x2</span><span class="p">,</span><span class="o">...</span><span class="p">)</span>           <span class="c1">#最小值，参数可以为序列</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">modf</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>             <span class="c1">#返回x的整数部分与小数部分，两部分的数值符号与 x 相同，整数部分以浮点型表示</span>
</span></span><span class="line"><span class="cl">    <span class="nb">round</span><span class="p">(</span><span class="n">x</span><span class="p">[,</span><span class="n">n</span><span class="p">])</span>             <span class="c1">#返回浮点数x的四舍五入值</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>             <span class="c1">#返回x的平方根，返回值为浮点数</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="随机数函数">随机数函数</h2>
<p><code>randrange([start,] stop [,step])</code>解析：</p>
<ul>
<li>start：   指定范围内的开始值，包含在范围内</li>
<li>stop：    指定范围内的结束值，不包含在范围内</li>
<li>step：    指定递增基数</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="n">randrange</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">100</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>         <span class="c1">#从[10,13,16,19,...)中返回一个随机数</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="kn">import</span> <span class="nn">random</span>
</span></span><span class="line"><span class="cl">    <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">seq</span><span class="p">)</span>          <span class="c1">#返回随机项，seq可以是一个列表，元组或字符串</span>
</span></span><span class="line"><span class="cl">    <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">([</span><span class="n">start</span><span class="p">,]</span> <span class="n">stop</span> <span class="p">[,</span><span class="n">step</span><span class="p">])</span>     <span class="c1">#从给定的范围返回随机项</span>
</span></span><span class="line"><span class="cl">    <span class="n">random</span><span class="o">.</span><span class="n">random</span><span class="p">()</span>             <span class="c1">#在[0,1)的区间内随机返回一个实数</span>
</span></span><span class="line"><span class="cl">    <span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">([</span><span class="n">x</span><span class="p">])</span>               <span class="c1">#改变随机数生成器的种子</span>
</span></span><span class="line"><span class="cl">    <span class="n">random</span><span class="o">.</span><span class="n">shuffle</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>            <span class="c1">#对list进行随机排序</span>
</span></span><span class="line"><span class="cl">    <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>            <span class="c1">#返回一个浮点数 N，取值范围为如果 x &lt; y 则 x &lt;= N &lt;= y，如果 y &lt; x 则y &lt;= N &lt;= x</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="三角函数">三角函数</h2>
<p><code>degrees(x)</code>与<code>radians(x)</code>解析：<br>
角度和弧度关系是：<br>
2π 弧度 = 360°。从而 1°≈0.0174533 弧度，1 弧度≈57.29578°</p>
<ul>
<li>角度转换为弧度公式：弧度=角度÷180×π</li>
<li>弧度转换为角度公式：角度=弧度×180÷π</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="kn">import</span> <span class="nn">math</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">acos</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>                    <span class="c1">#返回x的反余弦弧度值，x取值[-1,1]</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">asin</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>                    <span class="c1">#返回x的反正弦弧度值，x取值[-1,1]</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">atan</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>                    <span class="c1">#返回x的反正切弧度值</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">atan2</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>                 <span class="c1">#返回x,y坐标值的反正切值</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">cos</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>                     <span class="c1">#返回x的弧度的余弦值，返回值为[-1,1]</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">hypot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>                 <span class="c1">#返回欧几里德范数 sqrt(x*x + y*y)</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">sin</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>                     <span class="c1">#返回x的弧度的正弦值，返回值为[-1,1]</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">tan</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>                     <span class="c1">#返回x的弧度的正切值，返回值为[-1,1]</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">degrees</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>                 <span class="c1">#将弧度转换为角度</span>
</span></span><span class="line"><span class="cl">    <span class="n">math</span><span class="o">.</span><span class="n">radians</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>                 <span class="c1">#将角度转换为弧度</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>4.基本数据类型</title><link>https://nathanielgnef.github.io/posts/4.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Thu, 28 Apr 2022 10:23:52 +0800</pubDate><author>aquilah@aliyun.com (NathanielGnef)</author><guid>https://nathanielgnef.github.io/posts/4.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description><![CDATA[<h2 id="变量">变量</h2>
<p>Python 中的变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建<br>
在 Python 中，变量没有类型，我们所说的&quot;类型&quot;是变量所指的内存中对象的类型</p>
<h2 id="标准数据类型">标准数据类型</h2>
<p>不可变数据：</p>
<ul>
<li>Number（数字）</li>
<li>String（字符串）</li>
<li>Tuple（元组）</li>
</ul>
<p>可变数据：</p>
<ul>
<li>List（列表）</li>
<li>Set（集合）</li>
<li>Dictionary（字典）</li>
</ul>
<p>如果改变数据类型的值，将重新分配内存空间</p>
<h2 id="判断数据类型">判断数据类型</h2>
<p><code>type()</code>：<br>
语法：</p>
<ol>
<li><code>type(object)</code></li>
<li><code>type(name, bases, dict, **kwds)</code></li>
</ol>
<p>用法：https://docs.python.org/3/library/functions.html#type</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">d</span> <span class="o">=</span> <span class="mi">20</span><span class="p">,</span><span class="mf">5.5</span><span class="p">,</span><span class="kc">True</span><span class="p">,</span><span class="mi">4</span><span class="o">+</span><span class="mi">3</span><span class="n">j</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">),</span><span class="nb">type</span><span class="p">(</span><span class="n">b</span><span class="p">),</span><span class="nb">type</span><span class="p">(</span><span class="n">c</span><span class="p">),</span><span class="nb">type</span><span class="p">(</span><span class="n">d</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="k">class</span> <span class="err">&#39;</span><span class="nc">int</span><span class="s1">&#39;&gt; &lt;class &#39;</span><span class="nb">float</span><span class="s1">&#39;&gt; &lt;class &#39;</span><span class="nb">bool</span><span class="s1">&#39;&gt; &lt;class &#39;</span><span class="nb">complex</span><span class="s1">&#39;&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>isinstance()</code>：<br>
语法：<code>isinstance(object,classinfo)</code><br>
用法：https://docs.python.org/3/library/functions.html#isinstance</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">111</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="nb">int</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kc">True</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>isinstance()</code>和<code>type()</code>的区别在于：</p>
<ul>
<li><code>type()</code>不会认为子类是一种父类类型，不考虑继承关系</li>
<li><code>isinstance()</code>会认为子类是一种父类类型，考虑继承关系</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="k">class</span> <span class="nc">A</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="o">...</span>     <span class="k">pass</span>
</span></span><span class="line"><span class="cl">    <span class="o">...</span> 
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="k">class</span> <span class="nc">B</span><span class="p">(</span><span class="n">A</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="o">...</span>     <span class="k">pass</span>
</span></span><span class="line"><span class="cl">    <span class="o">...</span> 
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">A</span><span class="p">(),</span> <span class="n">A</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kc">True</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">type</span><span class="p">(</span><span class="n">A</span><span class="p">())</span> <span class="o">==</span> <span class="n">A</span> 
</span></span><span class="line"><span class="cl">    <span class="kc">True</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">B</span><span class="p">(),</span> <span class="n">A</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kc">True</span>
</span></span><span class="line"><span class="cl">    <span class="o">&gt;&gt;&gt;</span> <span class="nb">type</span><span class="p">(</span><span class="n">B</span><span class="p">())</span> <span class="o">==</span> <span class="n">A</span>
</span></span><span class="line"><span class="cl">    <span class="kc">False</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>3.基础语法</title><link>https://nathanielgnef.github.io/posts/3.%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</link><pubDate>Mon, 25 Apr 2022 16:53:28 +0800</pubDate><author>aquilah@aliyun.com (NathanielGnef)</author><guid>https://nathanielgnef.github.io/posts/3.%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</guid><description><![CDATA[<h2 id="编码">编码</h2>
<p>默认情况下，Python 3 源码文件以 UTF-8 编码，所有字符串都是 Unicode 字符串</p>
<h2 id="标识符">标识符</h2>
<ul>
<li>第一个字符必须是字母表中字母或下划线<code>_</code></li>
<li>标识符的其他的部分由字母、数字和下划线<code>_</code>组成</li>
<li>标识符对大小写敏感</li>
</ul>
<p>在Python3中，可以用中文作为变量名，非 ASCII 标识符也是允许的</p>
<p>Python可以同一行显示多条语句，方法是用分号<code>;</code>分开</p>
<h2 id="python保留字">Python保留字</h2>
<p>保留字即关键字，我们不能把它们用作任何标识符名称
Python的标准库提供了一个keyword模块，可以输出当前版本的所有关键字</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">keyword</span>
</span></span><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> <span class="n">keyword</span><span class="o">.</span><span class="n">kwlist</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="s1">&#39;False&#39;</span><span class="p">,</span> <span class="s1">&#39;None&#39;</span><span class="p">,</span> <span class="s1">&#39;True&#39;</span><span class="p">,</span> <span class="s1">&#39;__peg_parser__&#39;</span><span class="p">,</span> <span class="s1">&#39;and&#39;</span><span class="p">,</span> <span class="s1">&#39;as&#39;</span><span class="p">,</span> <span class="s1">&#39;assert&#39;</span><span class="p">,</span> <span class="s1">&#39;async&#39;</span><span class="p">,</span> <span class="s1">&#39;await&#39;</span><span class="p">,</span> <span class="s1">&#39;break&#39;</span><span class="p">,</span> <span class="s1">&#39;class&#39;</span><span class="p">,</span> <span class="s1">&#39;continue&#39;</span><span class="p">,</span> <span class="s1">&#39;def&#39;</span><span class="p">,</span> <span class="s1">&#39;del&#39;</span><span class="p">,</span> <span class="s1">&#39;elif&#39;</span><span class="p">,</span> <span class="s1">&#39;else&#39;</span><span class="p">,</span> <span class="s1">&#39;except&#39;</span><span class="p">,</span> <span class="s1">&#39;finally&#39;</span><span class="p">,</span> <span class="s1">&#39;for&#39;</span><span class="p">,</span> <span class="s1">&#39;from&#39;</span><span class="p">,</span> <span class="s1">&#39;global&#39;</span><span class="p">,</span> <span class="s1">&#39;if&#39;</span><span class="p">,</span> <span class="s1">&#39;import&#39;</span><span class="p">,</span> <span class="s1">&#39;in&#39;</span><span class="p">,</span> <span class="s1">&#39;is&#39;</span><span class="p">,</span> <span class="s1">&#39;lambda&#39;</span><span class="p">,</span> <span class="s1">&#39;nonlocal&#39;</span><span class="p">,</span> <span class="s1">&#39;not&#39;</span><span class="p">,</span> <span class="s1">&#39;or&#39;</span><span class="p">,</span> <span class="s1">&#39;pass&#39;</span><span class="p">,</span> <span class="s1">&#39;raise&#39;</span><span class="p">,</span> <span class="s1">&#39;return&#39;</span><span class="p">,</span> <span class="s1">&#39;try&#39;</span><span class="p">,</span> <span class="s1">&#39;while&#39;</span><span class="p">,</span> <span class="s1">&#39;with&#39;</span><span class="p">,</span> <span class="s1">&#39;yield&#39;</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="注释">注释</h2>
<ul>
<li>单行注释以#开头</li>
<li>多行注释可以用多个<code>#</code>号，还有<code>'''</code>和<code>&quot;&quot;&quot;</code></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">        <span class="c1"># 注释1</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 注释2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;&#39;&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">        注释块1
</span></span></span><span class="line"><span class="cl"><span class="s1">        &#39;&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">        注释块2
</span></span></span><span class="line"><span class="cl"><span class="s2">        &#34;&#34;&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="行和缩进">行和缩进</h2>
<p>Python最具特色的就是使用缩进来表示代码块，不需要使用大括号{}<br>
缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数</p>
<h2 id="多行语句">多行语句</h2>
<ol>
<li>多行连接符：<code>\</code></li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> <span class="nb">str</span> <span class="o">=</span> <span class="s2">&#34;item_one &#34;</span> <span class="o">+</span> \
</span></span><span class="line"><span class="cl">        <span class="o">...</span>       <span class="s2">&#34;item_two &#34;</span> <span class="o">+</span> \
</span></span><span class="line"><span class="cl">        <span class="o">...</span>       <span class="s2">&#34;item_three&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> 
</span></span><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>        
</span></span><span class="line"><span class="cl">        <span class="n">item_one</span> <span class="n">item_two</span> <span class="n">item_three</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>语句中包含<code>[]</code>,<code>{}</code>或<code>()</code>括号就不需要使用多行连接符</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> <span class="n">days</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Monday&#39;</span><span class="p">,</span> <span class="s1">&#39;Tuesday&#39;</span><span class="p">,</span> <span class="s1">&#39;Wednesday&#39;</span><span class="p">,</span><span class="s1">&#39;Thursday&#39;</span><span class="p">,</span> <span class="s1">&#39;Friday&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">days</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="s1">&#39;Monday&#39;</span><span class="p">,</span> <span class="s1">&#39;Tuesday&#39;</span><span class="p">,</span> <span class="s1">&#39;Wednesday&#39;</span><span class="p">,</span> <span class="s1">&#39;Thursday&#39;</span><span class="p">,</span><span class="s1">&#39;Friday&#39;</span><span class="p">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="空行">空行</h2>
<p>函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。类和函数入口之间也用一行空行分隔，以突出函数入口的开始<br>
空行与代码缩进不同，空行并不是 Python 语法的一部分。书写时不插入空行，Python 解释器运行也不会出错<br>
但是空行的作用在于分隔两段不同功能或含义的代码，便于日后代码的维护或重构<br>
<strong>记住</strong>：空行也是程序代码的一部分</p>
<h2 id="同一行使用多条语句">同一行使用多条语句</h2>
<p>Python 可以在同一行中使用多条语句，语句之间使用分号<code>;</code>分割</p>
<h2 id="多个语句构成代码组">多个语句构成代码组</h2>
<p>缩进相同的一组语句构成一个代码块，我们称之代码组<br>
像<code>if</code>、<code>while</code>、<code>def</code>和<code>class</code>这样的复合语句，首行以关键字开始，以冒号<code>:</code>结束，该行之后的一行或多行代码构成代码组<br>
我们将首行及后面的代码组称为一个子句(clause)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">expression</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">suite</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">expression</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">suite</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">suite</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="print输出">print输出</h2>
<p>print 默认输出是换行的，如果要实现不换行需要设置参数<code>end=&quot;&quot;</code>，参数默认值为<code>end=&quot;\n&quot;</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">2</span> 
</span></span><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">);</span><span class="nb">print</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">);</span><span class="nb">print</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">12</span><span class="o">&gt;&gt;&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="import-与-fromimport">import 与 from&hellip;import</h2>
<p>在 Python 用<code>import</code>或者<code>from...import</code>来导入相应的模块
将整个模块(somemodule)导入，格式为：<code>import somemodule</code><br>
从某个模块中导入某个函数,格式为：<code>from somemodule import somefunction</code>
从某个模块中导入多个函数,格式为：<code>from somemodule import firstfunc, secondfunc, thirdfunc</code><br>
将某个模块中的全部函数导入，格式为： <code>from somemodule import *</code></p>
<h2 id="命令行参数">命令行参数</h2>
<p>Python 可以使用<code>-h</code>参数查看各参数帮助信息</p>
<h2 id="删除对象">删除对象</h2>
<p>可以使用<code>del</code>语句删除一些对象
语法：<code>del var1[,var2[,var3[....,varN]]]</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">    <span class="k">del</span> <span class="n">var</span>
</span></span><span class="line"><span class="cl">    <span class="k">del</span> <span class="n">var1</span><span class="p">,</span><span class="n">var2</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item></channel></rss>